.CODE
PUSH lblInit_main
CALL
HALT
simple_heap_init:   RET 0   ; Retorna inmediatamente
simple_malloc:      LOADFP  ; inicializacion del RA
LOADSP
STOREFP ; Finaliza inicializacion del RA
LOADHL  ; hl
DUP  ; hl
PUSH 1  ; 1
ADD ; hl+1
STORE 4 ; Guarda el resultado (el puntero a la primer celda de la region de memoria)
LOAD 3  ; Carga la cantidad de celdas a alojar (parametro debe ser positvo)
ADD
STOREHL ; Mueve el heap limit (h1). Expande el heap
STOREFP
RET 1   ; Retorna elimiando el parametro
.DATA
lblVTInit:  NOP
.CODE
lblObject_debugPrint: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
IPRINT  ; Imprimir el valor del parametro
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblInit_main: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
FMEM 0
STOREFP ; Almacena el tope de la pila en el registro
RET 0
.DATA
lblVTObject:  NOP
.CODE
.DATA
lblVTString:  NOP
.CODE
.DATA
lblVTSystem:  NOP
.CODE
lblSystem_printC: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
CPRINT  ; Imprimir el valor del parametro
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblSystem_printS: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
SPRINT  ; Imprimir el valor del parametro
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblSystem_println: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
PRNLN  ; Leer un byte de la entrada estandar
STOREFP ; Almacena el tope de la pila en el registro
RET 0
lblSystem_printCln: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
CPRINT  ; Imprimir el valor del parametro
PRNLN  ; Leer un byte de la entrada estandar
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblSystem_printSln: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
SPRINT  ; Imprimir el valor del parametro
PRNLN  ; Leer un byte de la entrada estandar
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblSystem_read: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
READ  ; Leer un byte de la entrada estandar
STORE 3  ; Almacena el valor leido en la variable
STOREFP ; Almacena el tope de la pila en el registro
RET 0
lblSystem_printB: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
BPRINT  ; Imprimir el valor del parametro
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblSystem_printIln: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
IPRINT  ; Imprimir el valor del parametro
PRNLN  ; Leer un byte de la entrada estandar
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblSystem_printI: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
IPRINT  ; Imprimir el valor del parametro
STOREFP ; Almacena el tope de la pila en el registro
RET 1
lblSystem_printBln: LOADFP; Apilar el valor del registro
LOADSP  ; Apilar el valor del SP
STOREFP ; Guardar el valor del SP en el FP
LOAD 3  ; Apilar el valor del parametro
BPRINT  ; Imprimir el valor del parametro
PRNLN  ; Leer un byte de la entrada estandar
STOREFP ; Almacena el tope de la pila en el registro
RET 1
